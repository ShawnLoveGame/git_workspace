<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.he.exam.webapp.dao.exam.QuestionsMapper" >
    <resultMap id="BaseResultMap" type="com.he.exam.webapp.model.exam.Questions" >
        <id column="id" property="id" jdbcType="BIGINT" />
        <result column="answer_time" property="answerTime" jdbcType="VARCHAR" />
        <result column="question_type" property="questionType" jdbcType="INTEGER" />
        <result column="library_id" property="libraryId" jdbcType="BIGINT" />
        <result column="question_content" property="questionContent" jdbcType="LONGVARCHAR" />
        <result column="question_options" property="questionOptions" jdbcType="LONGVARCHAR" />
        <result column="answers" property="answers" jdbcType="VARCHAR" />
        <result column="status" property="status" jdbcType="INTEGER" />
        <result column="op_time" property="opTime" jdbcType="TIMESTAMP" />
        <result column="is_deleted" property="isDeleted" jdbcType="INTEGER" />
    </resultMap>

    <sql id="Example_Where_Clause" >
        <where >
            <foreach collection="oredCriteria" item="criteria" separator="or" >
                <if test="criteria.valid" >
                    <trim prefix="(" suffix=")" prefixOverrides="and" >
                        <foreach collection="criteria.criteria" item="criterion" >
                            <choose >
                                <when test="criterion.noValue" >
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue" >
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue" >
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue" >
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>

    <sql id="Update_By_Example_Where_Clause" >
        <where >
            <foreach collection="example.oredCriteria" item="criteria" separator="or" >
                <if test="criteria.valid" >
                    <trim prefix="(" suffix=")" prefixOverrides="and" >
                        <foreach collection="criteria.criteria" item="criterion" >
                            <choose >
                                <when test="criterion.noValue" >
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue" >
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue" >
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue" >
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>

    <sql id="Base_Column_List" >
        id, answer_time, question_type, library_id, question_content, question_options, answers, 
        status, op_time, is_deleted
    </sql>

    <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.he.exam.webapp.model.exam.QuestionsExample" >
        select
        <if test="distinct" >
            distinct
        </if>
        'true' as QUERYID,
        <include refid="Base_Column_List" />
        from questions
        <if test="_parameter != null" >
            <include refid="Example_Where_Clause" />
        </if>
        <if test="orderByClause != null" >
            order by ${orderByClause}
        </if>
        <if test="needCount != null and needCount == true ">
            limit #{rows}
        </if>
    </select>

    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
        select 
        <include refid="Base_Column_List" />
        from questions
        where id = #{id,jdbcType=BIGINT}
    </select>

    <insert id="insert" parameterType="com.he.exam.webapp.model.exam.Questions" >
        insert into questions (id, answer_time, question_type, 
            library_id, question_content, question_options, 
            answers, status, op_time, 
            is_deleted)
        values (#{id,jdbcType=BIGINT}, #{answerTime,jdbcType=VARCHAR}, #{questionType,jdbcType=INTEGER}, 
            #{libraryId,jdbcType=BIGINT}, #{questionContent,jdbcType=LONGVARCHAR}, #{questionOptions,jdbcType=LONGVARCHAR}, 
            #{answers,jdbcType=VARCHAR}, #{status,jdbcType=INTEGER}, #{opTime,jdbcType=TIMESTAMP}, 
            #{isDeleted,jdbcType=INTEGER})
    </insert>

    <select id="countByExample" parameterType="com.he.exam.webapp.model.exam.QuestionsExample" resultType="java.lang.Integer" >
        select count(*) from questions
        <if test="_parameter != null" >
            <include refid="Example_Where_Clause" />
        </if>
    </select>

    <update id="updateByExampleSelective" parameterType="map" >
        update questions
        <set >
            <if test="record.id != null" >
                id = #{record.id,jdbcType=BIGINT},
            </if>
            <if test="record.answerTime != null" >
                answer_time = #{record.answerTime,jdbcType=VARCHAR},
            </if>
            <if test="record.questionType != null" >
                question_type = #{record.questionType,jdbcType=INTEGER},
            </if>
            <if test="record.libraryId != null" >
                library_id = #{record.libraryId,jdbcType=BIGINT},
            </if>
            <if test="record.questionContent != null" >
                question_content = #{record.questionContent,jdbcType=LONGVARCHAR},
            </if>
            <if test="record.questionOptions != null" >
                question_options = #{record.questionOptions,jdbcType=LONGVARCHAR},
            </if>
            <if test="record.answers != null" >
                answers = #{record.answers,jdbcType=VARCHAR},
            </if>
            <if test="record.status != null" >
                status = #{record.status,jdbcType=INTEGER},
            </if>
            <if test="record.opTime != null" >
                op_time = #{record.opTime,jdbcType=TIMESTAMP},
            </if>
            <if test="record.isDeleted != null" >
                is_deleted = #{record.isDeleted,jdbcType=INTEGER},
            </if>
        </set>
        <if test="_parameter != null" >
            <include refid="Update_By_Example_Where_Clause" />
        </if>
    </update>

    <update id="updateByExample" parameterType="map" >
        update questions
        set id = #{record.id,jdbcType=BIGINT},
            answer_time = #{record.answerTime,jdbcType=VARCHAR},
            question_type = #{record.questionType,jdbcType=INTEGER},
            library_id = #{record.libraryId,jdbcType=BIGINT},
            question_content = #{record.questionContent,jdbcType=LONGVARCHAR},
            question_options = #{record.questionOptions,jdbcType=LONGVARCHAR},
            answers = #{record.answers,jdbcType=VARCHAR},
            status = #{record.status,jdbcType=INTEGER},
            op_time = #{record.opTime,jdbcType=TIMESTAMP},
            is_deleted = #{record.isDeleted,jdbcType=INTEGER}
        <if test="_parameter != null" >
            <include refid="Update_By_Example_Where_Clause" />
        </if>
    </update>

    <update id="updateByPrimaryKeySelective" parameterType="com.he.exam.webapp.model.exam.Questions" >
        update questions
        <set >
            <if test="answerTime != null" >
                answer_time = #{answerTime,jdbcType=VARCHAR},
            </if>
            <if test="questionType != null" >
                question_type = #{questionType,jdbcType=INTEGER},
            </if>
            <if test="libraryId != null" >
                library_id = #{libraryId,jdbcType=BIGINT},
            </if>
            <if test="questionContent != null" >
                question_content = #{questionContent,jdbcType=LONGVARCHAR},
            </if>
            <if test="questionOptions != null" >
                question_options = #{questionOptions,jdbcType=LONGVARCHAR},
            </if>
            <if test="answers != null" >
                answers = #{answers,jdbcType=VARCHAR},
            </if>
            <if test="status != null" >
                status = #{status,jdbcType=INTEGER},
            </if>
            <if test="opTime != null" >
                op_time = #{opTime,jdbcType=TIMESTAMP},
            </if>
            <if test="isDeleted != null" >
                is_deleted = #{isDeleted,jdbcType=INTEGER},
            </if>
        </set>
        where id = #{id,jdbcType=BIGINT}
    </update>

    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
        delete from questions
        where id = #{id,jdbcType=BIGINT}
    </delete>

    <delete id="deleteByExample" parameterType="com.he.exam.webapp.model.exam.QuestionsExample" >
        delete from questions
        <if test="_parameter != null" >
            <include refid="Example_Where_Clause" />
        </if>
    </delete>

</mapper>
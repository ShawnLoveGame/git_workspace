<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:jdbc="http://www.springframework.org/schema/jdbc"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="         
          http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd         
          http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd         
          http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd         
          http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd         
          http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd"
	default-autowire="byName">
	
	<bean id="dataSource_exam" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">
		<property name="url" value="${jdbc_exam.url}" />
		<property name="username" value="${jdbc_exam.username}" />
		<property name="password" value="${jdbc_exam.password}" />
		<property name="maxActive" value="${jdbc_exam.maxActive}" />
		<property name="initialSize" value="${jdbc_exam.initialSize}" />
		<property name="maxWait" value="${jdbc_exam.maxWait}" />
		<property name="minIdle" value="${jdbc_exam.minIdle}" />
		<property name="timeBetweenEvictionRunsMillis" value="${jdbc_exam.timeBetweenEvictionRunsMillis}" />
		<property name="minEvictableIdleTimeMillis" value="${jdbc_exam.minEvictableIdleTimeMillis}" />
	</bean>
	
	<bean id="sqlSessionFactory_exam" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource_exam" />
 		<property name="mapperLocations" value="classpath*:mapper/exam/*/*.xml" />
	</bean>
	 	
    <bean id="mybatisConfigurer_exam" class="org.mybatis.spring.mapper.MapperScannerConfigurer">  
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory_exam"/>  
        <property name="basePackage" value="com.he.exam.dao;" />
    </bean>



	<bean name="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource_exam"></property>
	</bean>

	<tx:advice id="userTxAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="delete*" propagation="REQUIRED" read-only="false"/>
			<tx:method name="insert*" propagation="REQUIRED" read-only="false" />
			<tx:method name="update*" propagation="REQUIRED" read-only="false" />
			<tx:method name="save*" propagation="REQUIRED" read-only="false" />
			<tx:method name="add*" propagation="REQUIRED" read-only="false"  />
			<tx:method name="edit*" propagation="REQUIRED" read-only="false"  />

			<tx:method name="find*" propagation="SUPPORTS"/>
			<tx:method name="get*" propagation="SUPPORTS"/>
			<tx:method name="select*" propagation="SUPPORTS"/>
		</tx:attributes>
	</tx:advice>

	<aop:config>
		<aop:pointcut id="pc" expression="execution( * com.he.exam.service..*(..))" /> <!--把事务控制在Service层-->
		<aop:advisor pointcut-ref="pc" advice-ref="userTxAdvice" />
	</aop:config>
    
</beans>  